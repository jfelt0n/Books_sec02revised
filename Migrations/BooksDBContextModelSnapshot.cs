// <auto-generated />
using Books_sec02revised.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bookssec02revised.Migrations
{
    [DbContext(typeof(BooksDBContext))]
    partial class BooksDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Books_sec02revised.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "David Grann",
                            BookTitle = "The Wager",
                            CategoryId = 1,
                            Description = "A Tale of shipwreck, mutiny and murder",
                            Price = 19.99m
                        },
                        new
                        {
                            BookId = 2,
                            Author = "John Grann",
                            BookTitle = "The Monster",
                            CategoryId = 2,
                            Description = "A Tale of shipwreck, murder",
                            Price = 16.99m
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Eli Grann",
                            BookTitle = "The Man",
                            CategoryId = 3,
                            Description = "A Tale of shipwreck, mutiny ",
                            Price = 17.99m
                        });
                });

            modelBuilder.Entity("Books_sec02revised.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "This is the description for the travel category",
                            Name = "Travel"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "This is the description for the fiction category",
                            Name = "Fiction"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "This is the description for the Nonfiction category",
                            Name = "Nonfiction"
                        });
                });

            modelBuilder.Entity("Books_sec02revised.Models.Book", b =>
                {
                    b.HasOne("Books_sec02revised.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
